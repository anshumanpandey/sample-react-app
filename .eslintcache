[{"/home/leo/Documentos/projects/google-login/src/reportWebVitals.js":"1","/home/leo/Documentos/projects/google-login/src/App.js":"2","/home/leo/Documentos/projects/google-login/src/index.js":"3","/home/leo/Documentos/projects/google-login/src/firebase.js":"4"},{"size":362,"mtime":1612368797010,"results":"5","hashOfConfig":"6"},{"size":3968,"mtime":1615439891940,"results":"7","hashOfConfig":"6"},{"size":850,"mtime":1615417104202,"results":"8","hashOfConfig":"6"},{"size":458,"mtime":1615433234112,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jg7apw",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leo/Documentos/projects/google-login/src/reportWebVitals.js",[],"/home/leo/Documentos/projects/google-login/src/App.js",["20","21"],"import logo from './logo.svg';\nimport './App.css';\nimport { GoogleLogin } from 'react-google-login';\nimport { useEffect, useState } from 'react';\nimport { messaging } from './firebase';\n\nconst login = () => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({\"email\":\"mail4@mail.com\",\"password\":\"s7mQZRFjOF\"});\n\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n\n  return fetch(\"http://localhost:3000/api/v1/sessions/\", requestOptions)\n    .then((r) => {\n      if (!r.ok) {\n        return Promise.reject(\"could set the web push token\")\n      } else {\n        return r.json()\n      }\n    })\n    .catch(error => console.log('error', error));\n}\n\nconst updateUserPushToken = ({ pushToken, jwtToken }) => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", `Bearer ${jwtToken}`);\n\n  var formdata = new FormData();\n  formdata.append(\"webPushNotificationToken\", pushToken);\n\n  var requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: formdata,\n    redirect: 'follow'\n  };\n\n  return fetch(\"http://localhost:3000/api/v1/users/me\", requestOptions)\n  .then((r) => {\n    if (!r.ok) {\n      return Promise.reject(\"could set the web push token\")\n    } else {\n      return r.json()\n    }\n  })\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n}\n\nconst postMessage = ({ jwtToken }) => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", `Bearer ${jwtToken}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({\"network\":\"telegram\",\"text\":\"some\",\"starred\":false,\"clientId\":\"db9aa797-caca-4985-99f5-946ddfe690df\"});\n\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n\n  return fetch(\"http://localhost:3000/api/v1/messages\", requestOptions)\n    .then((r) => {\n      if (!r.ok) {\n        return Promise.reject(\"error creating the message\")\n      } else {\n        return r.json()\n      }\n    })\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n}\n\nfunction App() {\n  const [jwtToken, setJwtToken] = useState(\"\")\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <button onClick={() => {\n        login()\n        .then((r) => {\n          setJwtToken(r.token)\n          return Notification.requestPermission()\n        })\n        .then(async function(granted) {\n          console.log({granted})\n          return messaging.getToken()\n        })\n        .then((firebaseToken) => {\n          return updateUserPushToken({ pushToken: firebaseToken, jwtToken })\n        })\n        .then(() => {\n          return postMessage({ jwtToken })\n        })\n        .catch(function(err) {\n          console.log(err);\n        });\n      }}>Ask message</button>\n      {/*<GoogleLogin\n        clientId=\"855173656817-auvud7iccrujivpsan50pgph97di7ho4.apps.googleusercontent.com\"\n        buttonText=\"Login\"\n        responseType=\"code\"\n        prompt='consent'\n        onSuccess={(r) => console.log(r)}\n        onFailure={(r) => console.log(r)}\n        scope={[\n          'profile',\n          'email',\n          'https://www.googleapis.com/auth/plus.me',\n          'https://www.googleapis.com/auth/userinfo.email',\n          \"https://www.googleapis.com/auth/userinfo.profile\",\n          \"https://www.googleapis.com/auth/profile.emails.read\",\n          \"https://www.googleapis.com/auth/user.addresses.read\"\n        ].join(' ')}\n      />*/}\n    </div>\n  );\n}\n\nexport default App;\n","/home/leo/Documentos/projects/google-login/src/index.js",[],["22","23"],"/home/leo/Documentos/projects/google-login/src/firebase.js",[],{"ruleId":"24","severity":1,"message":"25","line":3,"column":10,"nodeType":"26","messageId":"27","endLine":3,"endColumn":21},{"ruleId":"24","severity":1,"message":"28","line":4,"column":10,"nodeType":"26","messageId":"27","endLine":4,"endColumn":19},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},"no-unused-vars","'GoogleLogin' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-global-assign","no-unsafe-negation"]